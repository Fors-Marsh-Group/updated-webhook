[run]
tests = true

[linters]
disable-all = true
enable = [
  ## Enabled by Default
  "deadcode",
  "errcheck",
  "gosimple",
  "govet",
  "ineffassign",
  "staticcheck",
  "structcheck",
  "typecheck",
  "unused",
  "varcheck",

  ## Enabled locally
  "asciicheck",
  "bodyclose",
  "dogsled",
  "dupl",
  "exportloopref",
  "godot",
  "godox",
  "gofmt",
  "goimports",
  "golint",
  "goprintffuncname",
  # "gosec",
  "interfacer",
  # "lll",
  "maligned",
  "misspell",
  "nakedret",
  "nolintlint",
  "stylecheck",
  "unconvert",
  "unparam",
  "whitespace",
  # "wsl",

  ## Maybe? These will take some work
  # "funlen",
  # "gocognit",
  # "gocritic",
  # "gocyclo",
  # "gofumpt",
  # "nestif",

  ## Don't enable
  # "depguard",
  # "exhaustive",
  # "gochecknoinit",
  # "gochecknoglobals",
  # "goconst",
  # "gomnd",
  # "noctx",
  # "prealloc",
]

[linter-settings]

  [linters-settings.dogsled]
  max-blank-identifiers = 2

  [linters-settings.funlen]
  lines = 100
  statements = 50

  [linters-settings.goimports]
  local-prefixes = "github.com/adnanh/webhook"

  [linters-settings.golint]
  min-confidence = 0

  [linters-settings.godox]
  keywords = ["BUG", "FIXME", "XXX"]

  [linters-settings.govet]
  check-shadowing = true

  [linters-settings.gocritic]
  enabled-tags = [
    "diagnostic",
    # "experimental",
    "opinionated",
    "performance",
    "style",
  ]
  disabled-checks = [
    #"ifElseChain",
  ]

  [linters-settings.lll]
  line-length = 140

  [linters-settings.misspell]
  locale = "US"


[issues]

  max-issues-per-linter = 0
  max-same-issues = 0

  [[issues.exclude-rules]]
  path = "_test\\.go"
  linters = [
    "lll",
  ]

  [[issues.exclude-rules]]
  path = "(webhook|cipher_suites|_test)\\.go"
  linters = [
    "gochecknoglobals",
  ]

